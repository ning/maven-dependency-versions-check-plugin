<!--
~   Licensed under the Apache License, Version 2.0 (the "License");
~   you may not use this file except in compliance with the License.
~   You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~   Unless required by applicable law or agreed to in writing, software
~   distributed under the License is distributed on an "AS IS" BASIS,
~   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~   See the License for the specific language governing permissions and
~   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.basepom</groupId>
    <artifactId>basepom-oss</artifactId>
    <version>18</version>
  </parent>

  <groupId>com.ning.maven.plugins</groupId>
  <artifactId>maven-dependency-versions-check-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <version>2.0.5-SNAPSHOT</version>
  <name>maven-version-check-plugin Maven Mojo</name>

  <description>
    The maven-dependency-versions-check-plugin is a Maven plugin
    that verifies that the resolved versions of dependencies are at
    least the versions specified by the dependencies (or their
    dependencies etc.) if not higher.

    More specifically, it will check that
    * The resolved version of every dependency declared explicitly
    in the current POM is the same or a newer one than what was
    stated. If the resolved version has a higher major version
    number than the declared version, then the plugin will issue
    a warning if configured to do so.
    Note that enforced declared versions are ignored by the plugin.
    * For every explicitly declared dependency in the current POM, all
    its dependency versions are met. I.e. the resolved versions for
    all dependencies in that dependency's POM are the same or higher
    than the one stated in that dependency's POM. This is basically
    the same check as the one above, but using the dependency's POM!
    Also, if the current POM has exclusions specified for the
    dependency, then these transitive dependencies are ignored
    when checking this particular dependency.
  </description>

  <url>https://github.com/ning/maven-dependency-versions-check-plugin</url>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git://github.com/ning/maven-dependency-versions-check-plugin.git</connection>
    <developerConnection>scm:git:git://github.com/ning/maven-dependency-versions-check-plugin.git</developerConnection>
    <url>https://github.com/ning/maven-dependency-versions-check-plugin</url>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>tomdz</id>
      <name>Thomas Dudziak</name>
      <url>http://tomdz.org</url>
      <timezone>-8</timezone>
    </developer>
    <developer>
      <id>hgschmie</id>
      <name>Henning Schmiedehausen</name>
    </developer>
  </developers>
  <issueManagement>
    <system>Github</system>
    <url>https://github.com/ning/maven-dependency-versions-check-plugin/issues</url>
  </issueManagement>

  <properties>
    <dep.maven-api.version>2.2.1</dep.maven-api.version>
    <dep.plexus.version>1.3.0</dep.plexus.version>
    <dep.plugin.plugin.version>3.4</dep.plugin.plugin.version>
    <dep.slf4j.version>1.6.1</dep.slf4j.version>
    <project.build.targetJdk>1.6</project.build.targetJdk>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>${dep.maven-api.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.sonatype.sisu</groupId>
          <artifactId>sisu-inject-plexus</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>${dep.maven-api.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>${dep.maven-api.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>${dep.maven-api.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-dependency-tree</artifactId>
      <version>1.2</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${dep.slf4j.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${dep.slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.pyx4j</groupId>
      <artifactId>maven-plugin-log4j</artifactId>
      <version>1.0.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>19.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>findbugs-annotations</artifactId>
      <version>3.0.1</version>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-toolchains-plugin</artifactId>
          <version>1.1</version>
          <configuration>
            <toolchains>
              <jdk>
                <version>${project.build.targetJdk}</version>
                <vendor>sun</vendor>
              </jdk>
            </toolchains>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.plexus</groupId>
          <artifactId>plexus-component-metadata</artifactId>
          <version>${dep.plexus.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${dep.plugin.plugin.version}</version>
          <configuration>
            <skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-toolchains-plugin</artifactId>
                    <versionRange>[0,)</versionRange>
                    <goals>
                      <goal>toolchain</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-toolchains-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>toolchain</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <executions>
          <execution>
            <id>mojo-descriptor</id>
            <phase>process-classes</phase>
            <goals>
              <goal>descriptor</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.plexus</groupId>
        <artifactId>plexus-component-metadata</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>generate-metadata</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <excludeRoots combine.children="append">
            <excludeRoot>target/generated-sources/plugin</excludeRoot>
          </excludeRoots>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>travis</id>
      <activation>
        <property>
          <name>env.TRAVIS</name>
        </property>
      </activation>
      <properties>
        <!-- Travis does not yet support Maven 3.3.x -->
        <basepom.maven.version>3.2.5</basepom.maven.version>
      </properties>
    </profile>
  </profiles>
</project>
